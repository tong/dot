#!/bin/sh

#TODO: port dmenu-record
#TODO: update waybar (recording icon)

pid_file="/tmp/record_pid"

_fzf() {
    fzf --prompt="󰑊 " --pointer="" "$@"
}

audio() {
    format="flac"
    [ -n "$1" ] && format="$1"
    #echo  "$format"
    ffmpeg -f alsa -i default -c:a "$format" "$HOME/audio-$(date '+%y%m%d-%H%M-%S').$format" &
    echo $! > $pid_file
}

desktop() {
    ##ffmpeg -f x11grab -s
    #TODO:
    echo "TODO"
    #ffmpeg -video_size 640x480 -framerate 15 -f x11grab -i :0.0+100,100 output.mp4
}

screencast() {
	ffmpeg -y -f x11grab -framerate 60 -s "$(xdpyinfo | awk '/dimensions/ {print $2;}')" -i "$DISPLAY" -f alsa -i default -r 30 -c:v h264 -crf 0 -preset ultrafast -c:a aac "$HOME/screencast-$(date '+%y%m%d-%H%M-%S').mp4" &
    echo $! > $pid_file
	#updateicon "⏺️🎙️"
}

webcam() {
    video_size="640x480"
    [ "$1" = "hd" ] && video_size="1920x1080"
    ffmpeg -f v4l2 -i /dev/video0 -video_size "$video_size" "$HOME/webcam-$(date '+%y%m%d-%H%M-%S').mkv" &
    echo $! > $pid_file
}

stop() {
    pid="$(cat $pid_file)"
    echo "$pid"
    kill -15 "$pid"
    rm -f "$pid_file"
	sleep 3
	kill -9 "$pid"
	exit
}

ask() {
    choice=$(printf "audio\\nvideo\\ndesktop\\nscreencast\\nwebcam\\nwebcam-hd" | _fzf)
    case "$choice" in
        audio) audio;;
        video) video;;
        desktop) desktop;;
        screencast) screencast;;
        webcam) webcam;;
        webcam-hd) webcam "hd";;
    esac
}

askend() {
	response=$(printf "No\\nYes" | _fzf --header="Stop recording?" --reverse) &&[ "$response" = "Yes" ] &&  stop
}

case "$1" in
    audio) audio "$2";;
    video) video;;
    desktop) desktop "$2";;
    screencast) screencast;;
    webcam) webcam "$2";;
    stop) stop;;
    ask) ask;;
    *) ([ -f "$pid_file" ] && askend && exit) || ask;;
esac
