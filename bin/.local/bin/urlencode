#!/usr/bin/env bash
#
# urlencode: Percent-encodes a string, from arguments or stdin.
# Conforms to RFC 3986.
#
# Usage:
#   urlencode "string to encode"
#   echo "string to encode" | urlencode
#

set -euo pipefail

# Setting the locale to C ensures that the script works byte-by-byte,
# which is what URL encoding requires for correctness.
export LC_ALL=C

urlencode() {
  local string="${1}"
  local strlen=${#string}
  local encoded=""
  local pos c o
  for ((pos = 0; pos < strlen; pos++)); do
    c=${string:$pos:1}
    case "$c" in
    [-_.~a-zA-Z0-9])
      o="$c"
      ;;
    *)
      printf -v o '%%%02x' "'$c'"
      ;;
    esac
    encoded+="$o"
  done
  echo "$encoded"
}

# If arguments are provided, encode them all as a single string.
if [[ -n "${1:-}" ]]; then
  urlencode "$*"
  exit 0
fi
# Otherwise, read from standard input line by line.
# Using IFS= and -r is the robust way to read lines.
while IFS= read -r line; do
  urlencode "$line"
done
