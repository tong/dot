#!/bin/bash

set -C -f

IFS="$(printf '%b_' '\n')"; IFS="${IFS%_}"

SVG_PREVIEW_MAX_W=1280
SVG_PREVIEW_MAX_H=1080

preview_image() {
    file=$1; w=$2; h=$3; x=$4; y=$5
    #if [[ "$( file -Lb --mime-type "$file")" =~ ^image ]]; then
    #read -r LINES COLUMNS < <(stty size); echo "$LINES $COLUMNS"
    kitty +kitten icat --silent --stdin no --transfer-mode file --place "${w}x${h}@${x}x${y}" "$file" < /dev/null > /dev/tty
}

batorcat() {
	file="$1"
	shift
    if command -v bat > /dev/null 2>&1; then
        bat --color=always --style=full --pager=never --theme "$COLORTHEME" "$file" "$@"
    else
        cat "$file"
    fi
}

thumbnail_cache_path() {
    echo "$HOME/.cache/lf/thumbnail.$(stat --printf '%n\0%i\0%F\0%s\0%W\0%Y' -- "$(readlink -f "$1")" | sha256sum | awk '{print $1}')"
}

#case "$(file --dereference --brief --mime-type -- "$1")" in
case "$(printf "%s\n" "$(readlink -f "$1")" | awk '{print tolower($0)}')" in
    *.arm)
        armcat "$1" | bat --file-name "$1" --language json --color=always
        ;;
	*.avi|*.mp4|*.wmv|*.dat|*.3gp|*.ogv|*.mkv|*.mpg|*.mpeg|*.vob|*.fl[icv]|*.m2v|*.mov|*.webm|*.mts|*.m4v|*.r[am]|*.qt|*.divx)
        CACHE="$(thumbnail_cache_path "$1")"
		if [ ! -f "${CACHE}.jpg" ]; then
            size=0 #TODO: use a max size value to avoid creating big ass thumbs
            ffmpegthumbnailer -i "$1" -o "${CACHE}.jpg" -s $size -q 5
        fi
        preview_image "${CACHE}.jpg" "$2" "$3" "$4" "$5"
        #TODO show media info below thumb, need to get img height
        #br $3
        #mediainfo "$1"
		;;
	*.bmp|*.jpg|*.jpeg|*.png|*.xpm|*.webp|*.gif|*.jfif)
		preview_image "$1" "$2" "$3" "$4" "$5"
		;;
    *.blend)
		CACHE="$(thumbnail_cache_path "$1")"
		[ ! -f "$CACHE.png" ] && blender-thumbnailer "$1" "${CACHE}.png"
		preview_image "$CACHE.png" "$2" "$3" "$4" "$5"
        ;;
	#*.cbz|*.cbr|*.cbt)
		#[ ! -f "$CACHE" ] && \
			#comicthumb "$1" "$CACHE" 1024
		#image "$CACHE" "$2" "$3" "$4" "$5"
		#;;
	#*.epub)
		#[ ! -f "$CACHE" ] && \
			#epub-thumbnailer "$1" "$CACHE" 1024
		#image "$CACHE" "$2" "$3" "$4" "$5"
		#;;
	#*.html)
		#[ ! -f "$CACHE" ] && \ 
			#wkhtmltopdf "$1" - | pdftoppm -jpeg -f 1 -singlefile - "$CACHE"
		#image "${CACHE}.jpg" "$2" "$3" "$4" "$5"
		#;;
	*.html) lynx -width="$4" -display_charset=utf-8 -dump "$1" ;;
	*.ino) batorcat --language=cpp "$1" ;;
    *.iso) iso-info --no-header -l "$1" ;;
    *.md)
        batorcat "$1" ;;
        #glow "$1" ;; # TODO
    *.o) nm "$1";;
    *.otf|*.ttf|*.woff|*.woff2)
        CACHE="$(get_cache_id "$1")"
        [ ! -f "$CACHE.png" ] && ~/.config/lf/preview/font "$1"
        preview_image "/tmp/lf_fontpreview.png" "$2" "$3" "$4" "$5"
        #mediainfo "$1"
        ;;
	*.pdf)
        CACHE="$(get_cache_id "$1")"
		[ ! -f "${CACHE}.jpg" ] && pdftoppm -jpeg -f 1 -singlefile "$1" "$CACHE"
		preview_image "${CACHE}.jpg" "$2" "$3" "$4" "$5"
		;;
    *.rar) unrar l "$1" ;;
    *.svg)
        mediainfo "$1"
        CACHE="$(thumbnail_cache_path "$1")"
        [ ! -f "$CACHE.png" ] && svg2png -i "$1" -o "$CACHE.png" --max-width $SVG_PREVIEW_MAX_W --max-height $SVG_PREVIEW_MAX_H
		#[ ! -f "$CACHE.png" ] && inkscape "$1" -o "$CACHE.png"
		preview_image "$CACHE.png" "$2" "$3" "$4" "6"
        ;;
    *.tar) tar tf "$1" ;;
	*.tar.bz2|*.tbz2) tar tjf "$1" ;;
	*.tar.txz|*.txz) xz --list "$1" ;;
    *.tgz|*.tar.gz) tar tzf "$1" ;;
    *.torrent) transmission-show "$1" ;;
    *.wav|*.mp3|*.flac|*.m4a|*.wma|*.ape|*.ac3|*.og[agx]|*.spx|*.opus|*.as[fx]|*.mka)
        exiftool "$1"
        ;;
	*.zip|*.jar|*.war|*.ear|*.oxt) unzip -l "$1" ;;
	*.7z) 7z l "$1" ;;
	#*.[1-8]) man "$1" | col -b ;;
		#ssconvert --export-type=Gnumeric_stf:stf_csv "$1" "fd://1" | batorcat --language=csv
		#;;
	*) batorcat "$1" ;;
esac
exit 1
